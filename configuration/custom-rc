#!/usr/bin/env zsh

# Path
export PATH="$PATH:$HOME/bin"
export PATH="$PATH:$HOME/linux-utils/bin"
export PATH="$PATH:$HOME/.go/bin"
export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$PATH:/opt/maven/bin"
export PATH="$PATH:/opt/sbt/bin"
export PATH="$PATH:$HOME/.n/bin"

# N: https://github.com/tj/n
export N_PREFIX=$HOME/.n

# Go
export GOPATH="$HOME/.go"
export GOROOT="/usr/lib/go"

# Default editor
export EDITOR=vim

# Aliases
alias k="kubectl"
alias ks="kubectl -n kube-system"
function ka() { kubectl "$@" --all-namespaces ;}
alias k-pods-nodes="kubectl get pod -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName --all-namespaces"
alias kgn="kubectl get namespaces"
function ksn(){ kubectl config set-context $(kubectl config current-context) --namespace=$1 }
alias k-watch-pods="watch -n 0,5 kubectl get pods"
alias ks-watch-pods="watch -n 0,5 kubectl get pods -n kube-system"
alias ka-watch-pods="watch -n 0,5 kubectl get pods --all-namespaces"
alias kcgc="kubectl config get-contexts"
alias kp="kubectl proxy"
alias kpf="kubectl port-forward"
alias k-events-sorted="kubectl get events  --sort-by='.metadata.creationTimestamp'"
alias xo="xdg-open"
alias cl="clear"
alias re="reset"
alias rh="rehash"
alias tr="tree -L 2"
alias lst="lsd --tree"
alias df="df -h"

unalias gsd 	# Can waste repositories, from oh-my-zsh git plugin
unalias gm

# History options
export HISTTIMEFORMAT='%d %H:%M '
export PROMPT_COMMAND='history -a'
setopt hist_ignore_all_dups  # ignore duplicate entries
setopt hist_ignore_space     # ignore commands prefixed with space

# Zsh auto suggestions, see https://github.com/zsh-users/zsh-autosuggestions
if [[ -f ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
	source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# Git options and aliases
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

# Ansible
export ANSIBLE_NOCOWS=1

# Sdkman
if [[ -d "${HOME}/.sdkman/bin/sdkman-init.sh" ]]; then
    source "${HOME}/.sdkman/bin/sdkman-init.sh"
fi

# Local presets
if [[ -f ~/.custom-rc ]]; then
    echo "Sourcing $HOME/.custom-rc"
    source $HOME/.custom-rc
fi

# WOOOOOO !
CMATRIX_COLOR=blue
if [[ "${USER}" = "root" ]]; then
	CMATRIX_COLOR=red
fi

cmatrix -b  -C ${CMATRIX_COLOR}


